spring:
  cloud:
    azure:
      keyvault:
        secret:
          property-sources[0]:
            endpoint: ${AZURE_KEY_VAULT_ENDPOINT} #environment variable
      storage:
        blob:
          account-name: ${AZURE_STORAGE_ACCOUNT_NAME} #set up the blob storage here
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 20MB

  datasource:
    url: ${datasource-url} #secrets from azure key vault
    username: ${datasource-username} #secrets from azure key vault
    password: ${datasource-password} #secrets from azure key vault
  jpa:
    hibernate:
      ddl-auto: none #turn off the DDL auto generation
ai:
  openai:
    endpoint: ${AI_OPENAI_ENDPOINT:https://api.openai.com/v1/chat/completions}
    api-key: ${AI_OPENAI_API_KEY:your-openai-api-key} #secret from azure key vault. I have not implemented this for the environment
#it is not a good practise to save secrete key in the environment variable of IDE, so it should be saved in the azure key vault



#we will use the spring property placeholder feature to define the datasource properties else, running in the prod
#environment will use he in memory as data source
#As a db administrator, you must never hardcode your database credentials
#for this, some may store in production server but the best is key vault
#create a resource for this in azure
#compatibility-verifier.enabled: false